version: 0.2

env:
  variables:
    AWS_REGION: eu-north-1
    ACCOUNT_ID: 287216490901
    CLUSTER_NAME: hello-world-eks2
    DEPLOYMENT_NAME: hello-deployment
    CONTAINER_NAME: hello-container
    IMAGE_REPO_NAME: hello-world-ecr2
    IMAGE_TAG: latest

phases:
  install:
    runtime-versions:
      java: corretto21
      docker: 20
    commands:
      - echo "Installing kubectl..."
      - curl -o kubectl https://amazon-eks.s3.${AWS_REGION}.amazonaws.com/latest/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - mv ./kubectl /usr/local/bin/kubectl
      - kubectl version --client

  pre_build:
    commands:
      - echo "Authenticating to AWS..."
      - aws sts get-caller-identity
      - echo "Updating kubeconfig for cluster: $CLUSTER_NAME"
      - aws eks --region $AWS_REGION update-kubeconfig --name $CLUSTER_NAME
      - echo "Verifying EKS connectivity..."
      - kubectl get svc || (echo "kubectl failed: cannot connect to EKS cluster" && exit 1)
      - echo "Logging into Amazon ECR..."
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

  build:
    commands:
      - echo "Building Maven project..."
      - mvn clean package -DskipTests
      - echo "Building Docker image..."
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

  post_build:
    commands:
      - echo "Pushing Docker image to Amazon ECR..."
      - docker push $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo "Deploying to Amazon EKS..."
      - kubectl set image deployment/$DEPLOYMENT_NAME $CONTAINER_NAME=$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG --record
      - echo "Forcing rollout to pick up the new image..."
      - kubectl rollout restart deployment/$DEPLOYMENT_NAME
      - echo "Waiting for rollout to complete..."
      - kubectl rollout status deployment/$DEPLOYMENT_NAME
      - echo "Deployment successful!"

artifacts:
  files:
    - target/*.jar
