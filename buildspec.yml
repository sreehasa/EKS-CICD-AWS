version: 0.2

env:
  variables:
    AWS_REGION: eu-north-1
    ACCOUNT_ID: 287216490901
    CLUSTER_NAME: hello-world-eks
    DEPLOYMENT_NAME: hello-deployment
    CONTAINER_NAME: hello-container
    ECR_REPO_NAME: hello-world-ecr
    IMAGE_REPO_NAME: hello-world-ecr
    IMAGE_TAG: latest

phases:
  install:
    runtime-versions:
      java: corretto11

    commands:

      - echo "Installing kubectl..." && \
        KUBECTL_VERSION=$(curl -s https://dl.k8s.io/release/stable.txt) && \
        echo "Version: $KUBECTL_VERSION" && \
        curl -o kubectl https://dl.k8s.io/release/$KUBECTL_VERSION/bin/linux/amd64/kubectl && \
        chmod +x ./kubectl && \
        mv ./kubectl /usr/local/bin/ && \
        kubectl version --client


  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - echo "Ensure ECR repo exists..."
      - aws ecr describe-repositories --repository-names $ECR_REPO_NAME || aws ecr create-repository --repository-name $ECR_REPO_NAME

  build:
    commands:
      - echo "Building Maven project..."
      - mvn clean package -DskipTests
      - echo "Building Docker image..."
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME:$IMAGE_TAG

  post_build:
    commands:
      - echo "Pushing Docker image to ECR..."
      - docker push $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME:$IMAGE_TAG
      - echo "Deploying to EKS..."
      - kubectl apply -f deployment.yaml
      - kubectl set image deployment/$DEPLOYMENT_NAME $CONTAINER_NAME=$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME:$IMAGE_TAG
      - echo "Deployment complete!"
artifacts:
  files:
    - target/*.war
